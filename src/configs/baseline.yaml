defaults:
  - model: baseline
  - writer: cometml
  - metrics: example
  - datasets: example
  - dataloader: example
  - transforms: example
  - _self_
optimizer:
  _target_: torch.optim.AdamW
  betas: [0.9, 0.999]
  eps: 1e-08
  lr: 0.003
lr_scheduler:
  _target_: torch.optim.lr_scheduler.CosineAnnealingLR
  T_max: 0
loss_function:
  _target_: src.loss.CrossEntropyLoss
trainer:
  log_step: 50
  n_epochs: 40
  epoch_len: 0 #calculated in train.py
  device_tensors: ["data_object", "labels"] # which tensors should be on device (ex. GPU)
  resume_from: null # null or path to the checkpoint dir with *.pth and config.yaml
  device: auto # device name or "auto"
  override: True # if True, will override the previous run with the same name
  monitor: "min eval_EER" # "off" or "max/min metric_name", i.e. our goal is to maximize/minimize metric
  save_period: 5 # checkpoint each save_period epochs in addition to the best epoch
  early_stop: ${trainer.n_epochs} # epochs for early stopping
  save_dir: "saved"
  seed: 52
